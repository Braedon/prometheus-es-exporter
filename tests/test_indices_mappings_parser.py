import unittest

from prometheus_es_exporter.indices_mappings_parser import parse_response
from tests.utils import convert_result


class Test(unittest.TestCase):
    maxDiff = None

    # Sample response generated by querying the endpoint on a Elasticsearch
    # server populated with the following data (http command = Httpie utility):
    # > http -v POST localhost:9200/foo/_doc/1 val:=1 group1=a group2=a
    # > http -v POST localhost:9200/foo/_doc/2 val:=2 group1=a group2=b
    # > http -v POST localhost:9200/foo/_doc/3 val:=3 group1=b group2=b
    def test_endpoint(self):
        # Endpoint: /_mappings?pretty
        response = {
            "foo": {
                "mappings": {
                    "properties": {
                        "group1": {
                            "type": "text",
                            "fields": {
                                "keyword": {
                                    "type": "keyword",
                                    "ignore_above": 256
                                }
                            }
                        },
                        "group2": {
                            "type": "text",
                            "fields": {
                                "keyword": {
                                    "type": "keyword",
                                    "ignore_above": 256
                                }
                            }
                        },
                        "val": {
                            "type": "long"
                        }
                    }
                }
            }
        }

        expected = {
            'field_count{index="foo",field_type="keyword"}': 2,
            'field_count{index="foo",field_type="long"}': 1,
            'field_count{index="foo",field_type="text"}': 2
        }
        result = convert_result(parse_response(response))
        self.assertEqual(expected, result)

    # Pre ES7 version with mapping types.
    # Sample response generated by querying the endpoint on a Elasticsearch
    # server populated with the following data (http command = Httpie utility):
    # > http -v POST localhost:9200/foo/bar/1 val:=1 group1=a group2=a
    # > http -v POST localhost:9200/foo/bar/2 val:=2 group1=a group2=b
    # > http -v POST localhost:9200/foo/bar/3 val:=3 group1=b group2=b
    def test_old_endpoint(self):
        # Endpoint: /_mappings?pretty
        response = {
            "foo": {
                "mappings": {
                    "bar": {
                        "properties": {
                            "group1": {
                                "type": "text",
                                "fields": {
                                    "keyword": {
                                        "type": "keyword",
                                        "ignore_above": 256
                                    }
                                }
                            },
                            "group2": {
                                "type": "text",
                                "fields": {
                                    "keyword": {
                                        "type": "keyword",
                                        "ignore_above": 256
                                    }
                                }
                            },
                            "val": {
                                "type": "long"
                            }
                        }
                    }
                }
            }
        }

        expected = {
            'field_count{index="foo",field_type="keyword"}': 2,
            'field_count{index="foo",field_type="long"}': 1,
            'field_count{index="foo",field_type="text"}': 2
        }
        result = convert_result(parse_response(response))
        self.assertEqual(expected, result)


if __name__ == '__main__':
    unittest.main()
